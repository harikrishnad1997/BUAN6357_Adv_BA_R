###
#
# BUAN 6357 2023 Spring (Johnston)
#
# Exam 1: section 2 - classification
#
# A run log of this code is provided as a PDF file.
# You may run this code, explore its actions, and add comments 
#  as you wish.
#
# Based on class discussions and homework assignments,
# You should extend this code as needed in preparation for 
#  answering questions about the process presented here.
#
#
options(width=70,scipen=15)
setwd("/Users/harikrishnadev/Library/Mobile Documents/com~apple~CloudDocs/School Work/Sem 2/BUAN 6357/BUAN6357/exam_materials/exam_1") # change as needed
 
require(data.table)
require(partykit)
 
classif    <- c(1, 2, 3)
byCols     <- 2
byRows     <- 1
 
in1        <- fread(file="classif.dat")   
 
fitLogit   <- function(df,i) {
              df$y            <- 0
              df$y[df$grp==i] <- 1
              t               <- glm(y~.-grp,family=binomial(),data=df)
              return(t$fitted.values)
              }
 
(t         <- data.table(idx=1:3, i=1:3) )
tLogit     <- t[,.(fitted=fitLogit(in1,i)), by=.(idx)]
(mLogit    <- matrix(tLogit$fitted, ncol=length(classif),byrow=F) )
(idxLogit  <- apply(mLogit,byRows,which.max) )
(classLogit<- classif[idxLogit] )
(rMargin   <- mLogit[,1]+mLogit[,2]+mLogit[,3] )
t1         <- apply(mLogit,byRows,max)
(pLogit    <- t1/rMargin )
(brLogit   <- 1-pLogit )
(tbl1      <- table(in1$grp,classLogit,dnn=c("grp","class")) ) # 20220315; log: 321
 
 
nmDat      <- in1
nmDat$fac  <- as.factor(nmDat$grp)
(mn        <- ctree(fac~.-grp,data=nmDat) )
mnTree     <- as.matrix(predict(mn,type="prob")) 
attr(mnTree,"dimnames") <- NULL
mnTree
idxTr      <- apply(mnTree,byRows,which.max)
(classTree <- classif[idxTr] )
(pTree     <- apply(mnTree,byRows,max) )
(brTree    <- 1-pTree )
(tbl2      <- table(in1$grp,classTree,dnn=c("grp","class")) ) # 20220315; log: 565

